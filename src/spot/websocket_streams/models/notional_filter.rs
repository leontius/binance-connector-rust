/*
 * Binance Spot WebSocket Streams
 *
 * OpenAPI Specifications for the Binance Spot WebSocket Streams
 *
 * API documents:
 * - [Github web-socket-streams documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md)
 * - [General API information for web-socket-streams on website](https://developers.binance.com/docs/binance-spot-api-docs/web-socket-streams)
 *
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::spot::websocket_streams::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotionalFilter {
    #[serde(rename = "filterType", skip_serializing_if = "Option::is_none")]
    pub filter_type: Option<String>,
    #[serde(rename = "priceExponent", skip_serializing_if = "Option::is_none")]
    pub price_exponent: Option<i32>,
    #[serde(rename = "minNotional", skip_serializing_if = "Option::is_none")]
    pub min_notional: Option<String>,
    #[serde(rename = "applyMinToMarket", skip_serializing_if = "Option::is_none")]
    pub apply_min_to_market: Option<bool>,
    #[serde(rename = "maxNotional", skip_serializing_if = "Option::is_none")]
    pub max_notional: Option<String>,
    #[serde(rename = "applyMaxToMarket", skip_serializing_if = "Option::is_none")]
    pub apply_max_to_market: Option<bool>,
    #[serde(rename = "avgPriceMins", skip_serializing_if = "Option::is_none")]
    pub avg_price_mins: Option<i32>,
}

impl NotionalFilter {
    #[must_use]
    pub fn new() -> NotionalFilter {
        NotionalFilter {
            filter_type: None,
            price_exponent: None,
            min_notional: None,
            apply_min_to_market: None,
            max_notional: None,
            apply_max_to_market: None,
            avg_price_mins: None,
        }
    }
}
